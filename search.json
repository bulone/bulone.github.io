[{"categories":null,"content":"Toastbubble's friends","date":"2025-07-29","objectID":"/friends/","tags":null,"title":"友情链接","uri":"/friends/"},{"categories":null,"content":" 上述链接头像若无则使用默认小动物头像，头像来自@qiqilili 基础信息 - nickname: 吐司气泡 avatar: https://blog.toastbubble.top/logo.svg url: https://blog.toastbubble.top description: 这里有多的吐司快来品鉴 评论格式如下: ```yaml - nickname: \u003cyour nickname\u003e avatar: \u003cyour avatar\u003e url: \u003cyour site link\u003e description: \u003cdescription of your site\u003e ``` 须知 基本要求 网站类型：仅接受个人非商业博客或原创内容网站，拒绝商业推广、采集站、违规内容（如政治敏感、色情、侵权等）。 内容质量：网站需保持一定更新频率，新站需稳定运行至少 3 个月。 拒绝情形 以下情况将不予通过或移除友链： 网站无法访问或长期未维护（超过 6 个月无更新） 内容涉及侵权、抄袭或恶意行为（如恶意跳转、弹窗广告） 未按约定添加本站友链，或添加后擅自移除 审核与管理 人工审核，3-5 个工作日内回复，未通过不另行通知。 定期检查友链状态，若发现问题（如链接失效、违规内容）将直接下架。 注：本站保留最终解释权，如有争议，可邮件沟通（提供邮箱）。 ","date":"2025-07-29","objectID":"/friends/:0:0","tags":null,"title":"友情链接","uri":"/friends/"},{"categories":["搞点啥"],"content":"清理一遍散热好多了♨️","date":"2025-07-28","objectID":"/posts/mvml7er/","tags":["笔记本","动手实践"],"title":"笔记本清灰","uri":"/posts/mvml7er/"},{"categories":["搞点啥"],"content":"笔记本使用已经多年有余，无论什么季节使用表面都十分的烫手，于是打算将其拆开然后把风扇取下清灰。如果网上有类似的拆机视频，建议还是看下那些地方需要格外注意以及拆机手法，否则拆坏了就得不偿失。 首先就是关机，然后使用螺丝刀和翘片将后盖取下来。取下来后发现整个机身背部几乎每个部分都有细小灰尘，风扇里面更不用说堵塞很严重。 重要的是先断开电池，避免带电操作防止静电击穿。将风扇周围的排线卸下后，用螺丝刀将固定风扇的螺丝拧下。记得选择合适的螺丝刀，施加合适的力度避免滑丝情况（之前换网卡的时候固定网卡的螺丝就被我拧一定程度的滑丝，还好最后拧下来了）。 风扇取下后用软毛刷轻轻扫灰，如果有灰尘聚集类似棉状用镊子轻轻挑出，然后再用软毛刷轻轻刷内部灰尘。对于机身的排风口也是一样的操作。清理完成后将其装回原来的位置，盖上后盖，开机确保没问题后在将后盖的螺丝拧上。 整体操作下来不是很难，有对应视频的讲解下，部分位置要注意别损坏即可。清完灰后表面的整体温度相比之前是有明显改观的。相同使用场景下，原本的很烫手变成了稍微烫手，对于性能释放应该也会有点好处吧。 最后还是一点，动手需谨慎，操作需断电！！！ ","date":"2025-07-28","objectID":"/posts/mvml7er/:0:0","tags":["笔记本","动手实践"],"title":"笔记本清灰","uri":"/posts/mvml7er/"},{"categories":["搞点啥"],"content":"闲暇之余跑点轻脚本☺","date":"2025-06-23","objectID":"/posts/mg7gc5n/","tags":["docker","青龙面板"],"title":"Bt-R320安装青龙面板","uri":"/posts/mg7gc5n/"},{"categories":["搞点啥"],"content":"前几天在闲鱼上淘到一台搭载 Mt7981 型号为 Bt-R320 的 Wifi6 路由器，配置为 1G+128G EMMC+USB3.0 四个千兆网口，大概率是跑 PCDN 淘汰下来的。不过才几十块就能拿到能刷 Immortalwrt 系统的千兆路由还是很香的，并且这配置跑的青龙还是轻轻松松的。 刷机 具体教程在这个视频中都有，所需文件请到该播主公众号自行下载。 配置 刷好系统后，默认访问地址为 192.168.1.1，访问密码为 admin。 在系统 - 挂载点将/mnt/mmcblk0p6 挂载上，然后在 Docker- 配置中将 Docker 根目录改成/mnt/mmcblk0p6，注册表镜像新增 https://docker-0.unsee.tech 点后面➕号。 在终端中拉取青龙面板。 拉取青龙仓库 9730 是外部访问接口，可自行修改。对于官网的拉取命令删除了 -e 的两行环境设置，不删我运行访问网站是 Nginx 默认网页，不清楚为何这样，凑活着使用吧。 docker run -dit \\ -v $PWD/ql/data:/ql/data \\ # 冒号后面的 5700 为默认端口，如果设置了 QlPort, 需要跟 QlPort 保持一致 -p 5700:5700 \\ --name qinglong \\ --network=mynet \\ --hostname qinglong \\ --restart unless-stopped \\ whyour/qinglong:latest 注：--network=mynet 在下一节说明，为指定自定义的 docker 网络名称，如 docker 默认网络访问没问题请删除该选项！ 网络 容器使用 bridge 模式访问网络，不清楚为什么无法访问外网，根据搜索来的解决方案，修改后是可以访问的。 Docker \u003e 网络 \u003e 新建，填写网络名称，其他不用修改。 截图展示 新建镜像时，网络选取刚才创建的网络，不要选取默认的 bridge 网络接口。 网络选择 完成后可在终端设备中进入 docker 容器内对外网进行 ping 操作检测是否可以访问外网。 docker exec -it 容器名称 /bin/sh 如果还是无法访问，在网络 \u003e 防火墙中将转发由拒绝改为接受，保存应用后重启设备。 以上是参考一些链接和询问 Deepseek 给出的解决方案，如果有安全问题或有简单的方法希望能够指出，感谢🙇‍。 系统概览 参考 刷了flippy大神的openwrt固件，容器无法联网-斐讯无线路由器以及其它斐迅网络设备-恩山无线论坛、 132元的路由器新机皇BT-R320 刷机教程_哔哩哔哩_bilibili GitHub - whyour/qinglong: 支持 Python3、JavaScript、Shell、Typescript 的定时任务管理平台（Timed task management platform supporting Python3, JavaScript, Shell, Typescript） ","date":"2025-06-23","objectID":"/posts/mg7gc5n/:0:0","tags":["docker","青龙面板"],"title":"Bt-R320安装青龙面板","uri":"/posts/mg7gc5n/"},{"categories":["妙妙工具"],"content":"不同软件不同密码头真大😵‍💫","date":"2025-05-01","objectID":"/posts/xqiqdjq/","tags":["keepass","keepassxc","keepass2android"],"title":"密码管理方案","uri":"/posts/xqiqdjq/"},{"categories":["妙妙工具"],"content":"不同网站应用都需要账户密码，若均使用相同的密码，那么如果一处出现泄露则会导致其他的账户安全性。如果针对不同网站设置不同的密码，则有可能把自己给防住。可能会使用一些便签类软件去进行记载但是很麻烦。所以一个密码管理软件就十分的有必要了。 最先开始使用的是 Safeincloud，整体使用下来还行，电脑移动端都有相关配套软件，可最后还是选择了开源的 Keepass 相关软件。 电脑端：KeepassXC 移动端：Keepass2Android 网页端：KeepassXC-Web KeepassXC 不过有点遗憾的是 KeepassXC 不支持打开远程文件，对于多段同步来说是一个减分项，不过电脑端可以来利用坚果云客户端将文件挂载到本地盘在进行打开即可，移动端的可以直接利用 Webdav 进行访问修改文件，坚果云对于无 Vip 用户的 Webdav 权益足以保证正常情况下的同步使用。 在电脑上 可以设置快捷键调用 KeepassXC 进行选择并自动输入，移动端在符合规范的输入框调用 Keepass2Android 的自动填充服务，如果没有出现的话可以打开其自带的键盘进行选择条目填充。网页端配置连接客户端即可，对于无法读取输入框的情况，可以手动设定填充的那部分。 快捷键调用 KeepassXC 支持 Passkey 通行密钥，在网页端使用时需要将插件连接到客户端才能进行保存读取，否则会出现错误。 Passkey KepassXC 还有数据库报告功能，针对你的密码文件进行健康度检查，并根据得分进行条目排序，可自行选择是否修改。 健康检查 相较于 Bitwarden 可自行搭建服务端程序，keepass 类型的相关软件大部分都是本地化保存文件，金大可能保证数据安全，不过对于多端同步来说，还是相对于比较麻烦的，不过利用相对可靠的 Webdav 云盘，安全性上也能进一步得保证，密码文件的主密码尽量设置的复杂点。 ","date":"2025-05-01","objectID":"/posts/xqiqdjq/:0:0","tags":["keepass","keepassxc","keepass2android"],"title":"密码管理方案","uri":"/posts/xqiqdjq/"},{"categories":["数码烩"],"content":"感谢OPPO售后救了手机一条🐕命","date":"2025-04-07","objectID":"/posts/6he9mly/","tags":["OPPO","售后"],"title":"手机虚焊","uri":"/posts/6he9mly/"},{"categories":["数码烩"],"content":"©封面图版权归OPPO公司所有 问题 第一次听虚焊这个词的时候还是搭载骁龙 888 的某款手机大规模出现问题，没想到竟然发生在了这款搭载骁龙 855Plus 的 Reno Ace 上。出现问题大概是去年的 12 月份，我也不太清楚为什么在冬季会出现了虚焊。当时的主要现象就是充电时玩手机概率出现卡屏然后关机，如果在播放视频时就会出现鸣叫大约十秒左右关机。出现上述现象我就怀疑大概率是手机虚焊了，在酷安话题中也查询到之前其他酷友出现虚焊。当时也并没有太影响使用，避免在充电时玩手机即可，毕竟 65W 的快充和 4000mha 的电池充电速度还是可观的。不过持续到了也就前几天，在正常使用时手机突然关机，充电无反应，强制开机时在开机界面出现花屏无法开机🙃。 转机 在论坛上看到 OPPO 河南高级维修中心目前有免费维修主板的活动，只是不保证是否能够维修成功，也就是尽最大可能去维修。我尝试拨打了其客服电话，询问活动是否还存在，答复是可以寄过去诊断，直接在公众号上申请寄修服务，夸夸 OPPO 的服务寄修双向免费🥰。 过程 毕竟离得近隔天就到了，期间还会打电话询问问题所在和解决方案。哎呀如果手机卡开了骚扰拦截的（运营商方面），记得在对应的公众号里面看看有没有被拦截，寄过去三天客服每天都在打电话全都被运营商方面拦截了，最后逼得客服用私人号码打的叫回拨😥，真不是故意的。点名批评联通的骚扰拦截，没开短信提醒公众号里面也没有推送通知，下午把客服中心号码加入白名单还是被拦截🙄，问客服客服也没啥子主意，后面有手动开启短信提醒了。 虚假白名单 总结 手机完美亮屏🎉，OPPO 售后服务总体很完美，在服务公众号还能看到相应的维修测试过程图片，虽然不多，但很专业，下一部还是选择 OPPO。 芜湖 ","date":"2025-04-07","objectID":"/posts/6he9mly/:0:0","tags":["OPPO","售后"],"title":"手机虚焊","uri":"/posts/6he9mly/"},{"categories":["数码烩"],"content":"下周回国贾XX📆","date":"2025-03-29","objectID":"/posts/9avfttm/","tags":["乐视"],"title":"我的第一部手机","uri":"/posts/9avfttm/"},{"categories":["数码烩"],"content":"图片©中关村在线 在酷安上看到「我的第一步手机」话题，突然就想起了之前的真正属于我的第一部智能手机乐视 2X620。在拥有该手机之前，一直都在用我爸淘汰下来的手机，什么按键机、按键触摸机、杂牌智能机、大可乐 2 等等。这些手机好像也是印证了时代手机的发展方向。高中毕业后手机借给高中同学使用后续没还，所以一些内容都是凭借记忆去描述。 中考后，我爸在网上给我买了这部乐视 2 手机，那是 16 年。那时候的魅族还如日中天，小米利用互联网发展也风声水起，OV 也凭借着综艺赞助深入人心。我是没有想到我爸会给我买乐视这个品牌，第一次听见乐视赞助的湖南台「全员加速中」，在节目里嘉宾是不是掏出手机完成任务各种展示手机功能。那个时候乐视的各种资源仿佛还是十分雄厚的。 跑偏了，还是说回手机。拿到手的时候整个手机盒子很大很白很简约，正因为宽所以手机和很 \" 薄 “。打开后里面的东西也很平平无奇，除了赠送送的 Type-C 转 3.5MM 线。乐视在我印象里应该是国产第一个做 Typec 接口的手机，这点好评是不错，可是它把 3.5MM 接口砍了，虽有赠送的转接线，不能边充电边听歌也是些许遗憾，那时候的蓝牙耳机发展还是初始阶段。图先欠着。 发布会大吹特吹的 ID 无边框在手机打开后俨然成为了一种笑话。两边超宽的边框仿佛能停下航母，这块屏幕也只有在息屏时才能体现一体化的美感。这部手机整体后盖的金属散热时也挺烫手的。方正的外观，边角些许弧度，握在手里似板砖，可是与我表弟差不多厚度的边角圆弧观感差距大，手持感也大。现在直角边框又开始燃起火苗，各大手机厂商排队进入。 超大黑边 这个手机系统 EUI 是真逆天，不知道是不是对 MTK 调教的问题，打游戏时只要电量低于 20% 帧率就会掉到能玩的水平，眨眼补帧，接上电源又恢复如初。现在想起或许是电压问题？可是也就一年时间不到就这样了。官网 还有系类展示，不过下载链接已经挂了。 下载链接404 在这个手机上还花过不应该花的费用，那时候的我还十分的年轻，沉醉于酷安的刷机浪潮中，在此期间还将手机刷坏过一次，无法开机且刷不进包，到售后竟然收了我 50 大洋（太可恶了）。 三年使用下来，只能说这手机能用但不多。乐视 2 的时候，其也刚布局手机行业没几年，贾总模仿小米的销售思路销量也是可观。发布会上的生态化反，最后到头来步步败退。 最后，贾总下周回国吗？ 建筑 天空 *估计是保存在网盘里没原图上传现在都发绿了","date":"2025-03-29","objectID":"/posts/9avfttm/:0:0","tags":["乐视"],"title":"我的第一部手机","uri":"/posts/9avfttm/"},{"categories":["搞点啥"],"content":"简简单单，装备展示📱","date":"2025-03-27","objectID":"/posts/q7xf0ep/","tags":["hugo","blog","fixit"],"title":"增加设备展示页","uri":"/posts/q7xf0ep/"},{"categories":["搞点啥"],"content":"本文章使用 AI 辅助创作 引言 之间就馋 @张洪Heo 博主博客的我的装备页，模仿着主题的 Friends 模板进行修改，在 Fixit 上也增加了相同类似的装备展示页，因为设备没那么多所以也没进行分类。如果有想法直接修改 device.html 文件，不会的问 Deepseek这玩意可真好用啊，Hugo 文档较少比搜索引擎快得多。 演示地址: 设备陈列馆 目录文件树 –2025 年 6 月 30 日更新 – 将 devices.html 移到 layouts 目录下 根目录 │ ├── content │ └── devices.md # 内容文档 ├── data │ └── devices.yml # 数据配置 ├── layouts │ └── devices.html # 页面模板 └── static └── devices # 存放设备图片本地文件夹 创建页面模板 代码中我增加了如果没填设备图片链接的话，就用默认图片展位。默认图片下载链接放在文章尾部，下载后放到 static/devices 文件夹内即可（就是放设备图的位置）。 代码中有价格的元素，若在数据文件中填写参数就显示，不填就不显示。 {{- define \"title\" -}} {{- cond (.Param \"capitalizeTitles\") (title .Title) .Title -}} {{- if .Site.Params.withSiteTitle }} {{ .Site.Params.titleDelimiter }} {{ .Site.Title }}{{- end -}} {{- end -}} {{- define \"content\" -}} {{- $params := partial \"function/params.html\" -}} \u003carticle class=\"page single special\"\u003e \u003cdiv class=\"header\"\u003e {{- /* Title */ -}} \u003ch1 class=\"single-title animate__animated animate__pulse animate__faster\"\u003e{{- cond (.Param \"capitalizeTitles\") (title .Title) .Title -}}\u003c/h1\u003e {{- /* Subtitle */ -}} {{- with $params.subtitle -}}\u003cp class=\"single-subtitle animate__animated animate__fadeIn\"\u003e{{ . | $.RenderString }}\u003c/p\u003e{{- end -}} \u003c/div\u003e \u003cdiv class=\"devices\" id=\"content\"\u003e {{- $optim := slice (dict \"Process\" \"resize 800x webp q75\" \"descriptor\" \"800w\") (dict \"Process\" \"resize 1200x webp q75\" \"descriptor\" \"1200w\") (dict \"Process\" \"resize 1600x webp q75\" \"descriptor\" \"1600w\") -}} {{ range $index, $device := .Site.Data.devices }} {{- $deviceImage := default \"/device/white.webp\" $device.image -}} \u003cdiv class=\"device-item animate__animated animate__fadeIn\"\u003e \u003cfigure class=\"device-image\"\u003e {{- dict \"Src\" $deviceImage \"Alt\" $device.name \"Title\" $device.description \"Caption\" $device.name \"Loading\" \"lazy\" \"Linked\" true \"OptimConfig\" $optim | partial \"plugin/image.html\" -}} \u003c/figure\u003e \u003cdiv class=\"device-info\"\u003e {{ if $device.price }} \u003cdiv class=\"device-price\" title=\"首发价 - {{ $device.price}}\"\u003e{{ $device.price}}\u003c/div\u003e {{ end }} \u003cdiv class=\"device-title\"\u003e \u003ca href=\"{{ $device.link | safeURL }}\" class=\"device-link {{ if not $device.link }}disabled{{ end }}\"\u003e{{ $device.name}} {{ if $device.link }}↗{{ end }}\u003c/a\u003e \u003c/div\u003e \u003cp class=\"device-description\"\u003e{{ $device.description }}\u003c/p\u003e \u003c/div\u003e \u003c/div\u003e {{ end }} \u003c/div\u003e {{- /* Content */ -}} \u003cdiv class=\"content\"\u003e {{- dict \"Content\" .Content \"Ruby\" $params.ruby \"Fraction\" $params.fraction \"Fontawesome\" $params.fontawesome | partial \"function/content.html\" | safeHTML -}} \u003c/div\u003e {{- /* Comment */ -}} {{- partial \"single/comment.html\" . -}} \u003c/article\u003e {{ end }} CSS /* -------------------- 设备页 ------------------- */ @import url('_https://fonts.cdnfonts.com/css/d-din_'); .devices { display: flex; flex-wrap: wrap; justify-content: left; gap: 12px; margin-top: 1rem; box-sizing: border-box; } .device-item { border-radius: 6px; overflow: hidden; box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1); flex: 0 0 calc((100% - 30px) / 3); transition: transform 0.3s ease; border: solid 1px #f0f0f0; border-radius: 1rem; } .device-image { height: 150px; /* 减小高度 */ overflow: hidden; margin: 0; } .device-image img { width: 100%; height: 100%; object-fit: cover; transition: transform 0.3s ease; } .device-item:hover .device-image img { transform: scale(1.05); } .device-info { padding: 12px; text-align: left; .device-price { font-size: .875rem; line-height: 1.4; font-family: 'D-DIN', sans-serif; } .device-title { font-size: 1rem; font-weight: 600; a { \u0026.disabled { pointer-events: none; } } } p { font-size: 13px; line-height: 1.4; } } @media only screen and (max-width: 760px) { .devices { gap: 1rem; } .device-item { flex: 0 0 calc((100% - 1rem-4px) / 2); /* 非常小的屏幕上两列布局 */ } } @media only screen and (max-width: 480px) { .device-item { flex: 0 0 100%; /* 非常小的屏幕上两列布局 */ } .device-image { height: 200px; } } MD --- title: 设备陈列馆 subtitle: 记录曾经或正在使用过设备 layout: \"devices\" --- title subtitle layout 标题 副标题 页面模板 在该模板内填写内容时会在设备列表下展示的。 数据格式 - name: 设备名称 description: 设备描述 image: 设备图片 link(可选): 设备链接 price(可选): 设备价格 注：可选的意思是加活不加都行 以上配置完成后别忘了把图片放到 static/","date":"2025-03-27","objectID":"/posts/q7xf0ep/:0:0","tags":["hugo","blog","fixit"],"title":"增加设备展示页","uri":"/posts/q7xf0ep/"},{"categories":["搞点啥"],"content":"增加功能，规避风险⚙","date":"2025-03-26","objectID":"/posts/nyzk0nu/","tags":["fixit"],"title":"增加跳转中间页","uri":"/posts/nyzk0nu/"},{"categories":["搞点啥"],"content":"3-29：重新修改代码，使用主题的链接渲染。 引言 之前挺烦一些网站的链接跳转，类如 CSDN，掘金之类的，浪费时间还浪费精力。不过话说回来做中间页跳转还是有必要的，毕竟一些网站域名过期被一些非法网站使用，那么就会导致博客内文章直接引向非法网站，这是万万不可的。所以做中间页提醒访客链接安全未知，在此期间参考了一些博客站文章，感谢博主的分享🙇。 效果展示 目录文件树 . ├── assets/ │ ├── css/ │ │ └── _custom.css # 自定义 CSS 文件 │ └── js/ │ └── _custom.js # 自定义 JavaScript 文件 │ ├── content/ │ └── redirect.md # Markdown 内容文件 │ └── layouts/ │ └── redirect.html # 默认重定向模板 │ └── plugin/ └── link.html # 插件链接模板 链接渲染 复制一份主题文件中 layouts/partials/plugin/link.html 的到根目录，并修改成如下。 {{- $rel := \"\" -}} {{- $encoded := \"\" -}} {{- $external := false -}} {{- $noreferrer := true -}} {{- if eq .Noreferrer false -}} {{- $noreferrer = false -}} {{- end -}} {{- $url := urls.Parse .Destination -}} {{- if $url.IsAbs | or .Newtab -}} {{- $rel = cond $noreferrer \"external nofollow noopener noreferrer\" \"external nofollow\" -}} {{- $encoded = printf \"/redirect/?url=%s\" (.Destination | base64Encode | safeURL) -}} {{- $external = true -}} {{- end -}} {{- $class := .Class | default \"\" -}} {{- if eq .Card true -}} {{- $class = trim (printf \"%v %v\" \"card-link\" $class) \" \" -}} {{- end -}} \u003ca href=\"{{ $encoded | default .Destination | safeURL }}\" {{- with .Title }} title=\"{{ . }}\"{{- end -}} {{- if $external -}} target=\"_blank\"{{- end -}} {{- if $rel | or .Rel }} rel=\"{{ $rel }}{{ with .Rel }} {{ . }}{{ end }}\"{{- end -}} {{- with $class }} class=\"{{ with $class }}{{ . }}{{ end }}\"{{- end -}} {{- with .Download }} download=\"{{ . }}\"{{- end -}} \u003e {{- if ne .Card true -}} {{- with .Icon -}} {{- partial \"plugin/icon.html\" . }} {{ end -}} {{- with .Content -}} {{- . | safeHTML -}} {{- end -}} {{- if (.ExternalIcon | default false) | and $external | and (eq (hasPrefix .Content `\u003cimg`) false) | and (eq ((strings.HasSuffix .Content `\u003c/i\u003e`) | or (strings.HasSuffix .Content `):`)) false) -}} {{- if .Download -}} {{- dict \"Class\" \"fa-solid fa-cloud-download-alt fa-fw ms-1 text-secondary\" | partial \"plugin/icon.html\" -}} {{- else -}} {{- dict \"Class\" \"fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary\" | partial \"plugin/icon.html\" -}} {{- end -}} {{- else if .Download }} {{- dict \"Class\" \"fa-solid fa-download fa-fw ms-1 text-secondary\" | partial \"plugin/icon.html\" -}} {{- end -}} {{- else -}} {{- $cardIcon := .CardIcon -}} {{- if not $cardIcon -}} {{- with partial \"function/get-remote-image.html\" (dict \"Src\" (add \"https://favicon.im/\" $url.Host)) -}} {{- $cardIcon = .RelPermalink -}} {{- end -}} {{- end -}} {{- $attrs := `class=\"cl-backdrop\"` -}} {{- $attrs = printf ` style=\"--cl-bg-url: url(%v);\"` (resources.Get \"images/fixit.svg\" | minify).RelPermalink | add $attrs -}} \u003cspan {{ $attrs | safeHTMLAttr }}\u003e\u003c/span\u003e \u003cspan class=\"cl-content\"\u003e \u003cspan class=\"cl-text\"\u003e \u003cspan class=\"cl-title\"\u003e {{- with .Icon -}} {{- partial \"plugin/icon.html\" . }} {{ end -}} {{- with .Content -}} {{- . | safeHTML -}} {{- end -}} \u003c/span\u003e \u003cspan class=\"cl-meta\"\u003e \u003csvg class=\"cl-icon-link\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\u003e\u003cpath d=\"M574 665.4c-3.1-3.1-8.2-3.1-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8c-3.1-3.1-8.2-3.1-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3L574 665.4zM832.6 191.4c-84.6-84.6-221.5-84.6-306 0L410.3 307.6c-3.1 3.1-3.1 8.2 0 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6c-3.1 3.1-3.1 8.2 0 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1z\" fill=\"#a9a9b3\"\u003e\u003c/path\u003e\u003cpath d=\"M610.1 372.3c-3.1-3.1-8.2-3.1-11.3 0L372.3 598.7c-3.1 3.1-3.1 8.2 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3l-39.5-39.6z\" fill=\"#a9a9b3\"\u003e\u003c/path\u003e\u003c/svg\u003e \u003cspan class=\"cl-url\"\u003e {{- .Destination | safeURL -}} \u003c/span\u003e \u003c/span\u003e \u003c/span\u003e {{- if .Download -}} \u003csvg class=\"cl-shortcut-icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\"\u003e\u003cpath d=\"M82","date":"2025-03-26","objectID":"/posts/nyzk0nu/:0:0","tags":["fixit"],"title":"增加跳转中间页","uri":"/posts/nyzk0nu/"},{"categories":["搞点啥"],"content":"Fixit二度美化，统一样式🥰","date":"2025-03-24","objectID":"/posts/aa6eb19/","tags":["hugo","fixit"],"title":"Fixit主题美化","uri":"/posts/aa6eb19/"},{"categories":["搞点啥"],"content":" 声明 本文章部分内容借助 AI 辅助创作。 安装博客也一月有余，期间也拜访过其他博客站，当然是因为搜索知识进行拜访。对于主题的一些内容进行自定义并完善。 注：涉及到 html 修改部分请将所需修改文件复制一份到主题外相同位置，修改后既能应用也能不破坏原主题文件。 CSS 样式 对于主题 CSS 参数，可以在 assets/css 中创建 _override.scss 进行设置，会进行覆盖。 其他样式可以在同文件夹内创建 _custom.scss 进行编写。 本博客使用的是个人免费使用的 OPPO Sans4.0 字体，主要喜欢这个字体的数字部分。利用 中文网字计划网站 进行字体分包，在使用字体后不影响网站访问速度。 首页列表部分 原主题的首页列表部分是每行一个，列排布。没有封面图还好，如果有封面图因为比例显示为 1000 * 420，所以在屏幕上会显得很大，那么一页下来也显示不了几张图片。偶然进入 Atpx 的空间，发现其博客页很简约整齐，双列排布文章，每个文章块也很小。所以就借鉴了其样式内容，为了不同宽度设备整个块比例适当，所以也顺势调整了图片的宽高比达到合适程度。 文件位置： layouts/_default/home.html \u0026 summary.html layouts/partials/single/post-included-in.html 文章列表图 文章页 主要删除了作者信息，其余未作变化。 文件位置：layouts/post/single.html 调整位置 MSEmoji🎉 表情展示 主题自带有 Twemoji，可以在主题配置文件中选择开启。不过我开启后还是加载失败，所以还是把他关闭了。很喜欢微软的表情，在 Github 上搜索类似 Twemoji 的项目，最终找寻该项目符合。 Msemoji https://github.com/DellZHackintosh/msemoji 使用方法： 在配置文档中搜索 params.page.library.js，在其内部添加 someJavascript = “https://unpkg.com/msemoji@1.1.2/dist/msemoji.min.js\" 创建 custom.js，位置在 assets/js/ msemoji.parse(document.body,{ base: \"https://gcore.jsdelivr.net/gh/DellZHackintosh/msemoji@1.1.2/src/\", ext: \".svg\", folder: \"Color\" }); base ext folder 表情仓库位置 表情拓展名 表情所在目录 主要这三个参数即可，如果还想要其他参数配置，请参考原文档。 Waline 评论系统 博客使用的是 Waline，因为就它带有文章 Reaction，可以自定义图片。其他的几个评论系统都大差不差。使用方法请到 Waline官网 配置参数。 AOS动画库 滑动动画库，依赖于Jquery。 在hugo.toml中的[params.page.library]加入所需CSS，Js文件。然后再_custom.js中添加 AOS.init({ once:true, duration: 400, delay: 0, }); init内可以自选参数初始化。 相关链接 文章 Reaction 表情：Animated-Fluent-Emojis Deepseek：辅助生成样式代码。 前端炫酷的动画效果库–AOS使用详解_aos-easing-CSDN博客 插件 ｜ AOS 滚动动画库aos.js - 掘金 ","date":"2025-03-24","objectID":"/posts/aa6eb19/:0:0","tags":["hugo","fixit"],"title":"Fixit主题美化","uri":"/posts/aa6eb19/"},{"categories":["搞点啥"],"content":"好记性不如烂键盘⌨","date":"2025-02-10","objectID":"/posts/pougfvs/","tags":["blog","hugo","fixit"],"title":"博客建站记录","uri":"/posts/pougfvs/"},{"categories":["搞点啥"],"content":"虽然文笔不好，但是看见一个属于自己的站点就很开心。之后尝试过很多博客系统，耳熟能详的 Wordpress,Typecho 还有 Emblog 等。文章没写几篇系统倒是换了不少。而且每次更换都不进行文章备份，所以每次都是全新的博客站。有点跑题了，这些系统无一例外都要购买服务器或虚拟空间，对于当时还是学生的我只能寻找几块一月随时跑路的虚拟空间安装。所以上面说这么多，有钱就尝试动态博客系统，在线随时编写发布。静态博客就需要有台电脑方便些。 静态博客也有很多不过还是选择了 Hugo，因为从 建立-\u003e编写-\u003e发布 所需要的代码量相对很少，而且不接触 npm 那些。 安装 Hugo 所需工具：Hugo，Git Git 无需多言，之间下载安装即可。 Hugo官网Windows 提供三种三种通过包管理器进行安装，之后选择按照教程安装即可。 选择主题 选择合适的主题进行安装，每个主题都有详细的安装教程，根据教程进行安装。 选择编写工具 因为 Hugo 的文章都是 Markdown 类型，所以选择 Markdown 编写软件体验会更好。选择 Obsidian 的原因是可提供的插件多而且免费。在里面就可以一套流程走完，不需要再开命令行之类的。 使用的插件 插件截图 DataView：创建代码块查询文章数据。 HomePage：搭配 DataView 可以轻松的创建文章回顾。 Git：在 Obsidian 中进行 git 相关操作。 Image Converter：压缩转换图片用。 Linter： 格式化文档，保存时插入最后更新时间等。 QuickAdd：编写 js 代码在 Obsidian 中就可以新建文章。 其他的插件自行搜索查询相关功能。 QuickAdd 新增文章代码 (由 Deepseek 生成)： // 使用QuickAdd插件的scripting功能 module.exports = async (params) =\u003e { // 获取文件夹名称 const folderName = await params.quickAddApi.inputPrompt(\"请输入文件夹名称\"); if (!folderName) { new Notice(\"未输入文件夹名称。操作已取消。\"); return; } const basePath = '/content/posts'; const folderPath = `${basePath}/${folderName}`; const filePath = `${folderPath}/index.md`; try { // 创建文件夹（如果不存在） if (!await params.app.vault.adapter.exists(folderPath)) { await params.app.vault.createFolder(folderPath); } } catch (err) { new Notice(\"创建文件夹失败：\" + err.message); return; } // 获取当前日期 const currentDate = window.moment().format(\"YYYY-MM-DDTHH:mm:ss+08:00\"); // 生成唯一ID const uniqueID = Math.random().toString(36).substring(2, 9); // 创建文件内容需要的Frontmatter自行添删 const fileContent = `--- title: ${folderName.replace(/-/g, \" \").replace(/\\b\\w/g, l =\u003e l.toUpperCase())} date: ${currentDate} slug: ${uniqueID} description: draft: true tags: - draft categories: - draft featuredImage: featuredImagePreview: --- \u003c!--more--\u003e`; try { // 创建文件并获取文件引用 const newFile = await params.app.vault.create(filePath, fileContent); new Notice(`已在 ${folderName} 文件夹中创建 index.md`); // 获取当前活动的叶子（标签页）或在新的叶子中打开文件 let leaf = params.app.workspace.getLeaf(); // 打开新创建的文件 await leaf.openFile(newFile); // 可选：将焦点移动到编辑器 params.app.workspace.setActiveLeaf(leaf, { focus: true }); } catch (err) { new Notice(\"创建文件失败：\" + err.message); } }; 该代码在 posts 生成 文件夹/index.md 效果 使用方法： 复制并新建 js 文件在 Hugo 文件夹内，如 _scripts/newpost.js； 在 QuickAdd 插件配置中的 Template Folder Path 中将文件夹名称填入； 模板文件夹路径 点击 Mange Macros 按钮，在新弹窗底部输入框内输入名称后点击 Add macro； 新建完成后点击 Config-\u003eUse Scripts 选择刚才创建的 js 文件 -\u003e点击 ADD； 返回到插件主选项，将 Template 点击选择 Macro 然后输入 Name 后 Add Choice； 截图 点击⚙，选择刚才新增的 Macro 名称然后叉掉即可； 如图 Ctrl+P 输入 QuickAdd 刚才新建的 Choice 名称即可，也可以新增快捷键快速添加。 发布 编写完成保存后直接推送到远程 Hugo 源码仓库，仓库接收到更新后自动使用 Github Action 生成网站内容推送到 Github Page 仓库，直接一步到位更新网站。 Github Action 代码：来自 KrislinBlog name: github pages # 名字自取 on: push: branches: - main # 这里的意思是当 main分支发生push的时候，运行下面的jobs，这里先改为github-actions jobs: deploy: # 任务名自取 runs-on: ubuntu-latest # 在什么环境运行任务 steps: - uses: actions/checkout@v2 # 引用actions/checkout这个action，与所在的github仓库同名 with: submodules: true # Fetch Hugo themes (true OR recursive) 获取submodule主题 fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo # 步骤名自取 uses: peaceiris/actions-hugo@v2 # hugo官方提供的action，用于在任务环境中获取hugo with: hugo-version: 'latest' # 获取最新版本的hugo extended: true - name: Build run: hugo --minify # 使用hugo构建静态网页 - name: Deploy uses: peaceiris/actions-gh-pages@v3 # 一个自动发布github pages的action with: # github_token: ${{ secrets.GITHUB_TOKEN }} 该项适用于发布到源码相同repo的情况，不能用于发布到其他repo external_repository: bulone/bulone.github.io # 发布到哪个repo personal_token: ${{ secrets.ACTION_ACCESS_TOKEN }} # 发布到其他repo需要提供上面生成的personal access token publish_dir: ./public # 注意这里指的是要发布哪个文件夹的内容，而不是指发布到目的仓库的什么位置，因为hugo默认生成静态网页到public文件夹，所以这里发布public文件夹里的内容 publish_branch: main # 发布到哪个branch ","date":"2025-02-10","objectID":"/posts/pougfvs/:0:0","tags":["blog","hugo","fixit"],"title":"博客建站记录","uri":"/posts/pougfvs/"}]