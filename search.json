[{"categories":["搞点啥"],"content":"好记性不如烂键盘⌨","date":"2025-02-10","objectID":"/posts/pougfvs/","tags":["blog","hugo","fixit"],"title":"博客建站记录","uri":"/posts/pougfvs/"},{"categories":["搞点啥"],"content":"虽然文笔不好，但是看见一个属于自己的站点就很开心。之后尝试过很多博客系统，耳熟能详的 Wordpress,Typecho 还有 Emblog 等。文章没写几篇系统倒是换了不少。而且每次更换都不进行文章备份，所以每次都是全新的博客站。有点跑题了，这些系统无一例外都要购买服务器或虚拟空间，对于当时还是学生的我只能寻找几块一月随时跑路的虚拟空间安装。所以上面说这么多，有钱就尝试动态博客系统，在线随时编写发布。静态博客就需要有台电脑方便些。 静态博客也有很多不过还是选择了 Hugo，因为从 建立-\u003e编写-\u003e发布 所需要的代码量相对很少，而且不接触 npm 那些。 ","date":"2025-02-10","objectID":"/posts/pougfvs/:0:0","tags":["blog","hugo","fixit"],"title":"博客建站记录","uri":"/posts/pougfvs/"},{"categories":["搞点啥"],"content":"安装 Hugo 所需工具：Hugo，Git Git 无需多言，之间下载安装即可。 Hugo官网Windows 提供三种三种通过包管理器进行安装，之后选择按照教程安装即可。 ","date":"2025-02-10","objectID":"/posts/pougfvs/:1:0","tags":["blog","hugo","fixit"],"title":"博客建站记录","uri":"/posts/pougfvs/"},{"categories":["搞点啥"],"content":"选择主题 选择合适的主题进行安装，每个主题都有详细的安装教程，根据教程进行安装。 ","date":"2025-02-10","objectID":"/posts/pougfvs/:2:0","tags":["blog","hugo","fixit"],"title":"博客建站记录","uri":"/posts/pougfvs/"},{"categories":["搞点啥"],"content":"选择编写工具 因为 Hugo 的文章都是 Markdown 类型，所以选择 Markdown 编写软件体验会更好。选择 Obsidian 的原因是可提供的插件多而且免费。在里面就可以一套流程走完，不需要再开命令行之类的。 ","date":"2025-02-10","objectID":"/posts/pougfvs/:3:0","tags":["blog","hugo","fixit"],"title":"博客建站记录","uri":"/posts/pougfvs/"},{"categories":["搞点啥"],"content":"使用的插件 插件截图 DataView：创建代码块查询文章数据。 HomePage：搭配 DataView 可以轻松的创建文章回顾。 Git：在 Obsidian 中进行 git 相关操作。 Image Converter：压缩转换图片用。 Linter： 格式化文档，保存时插入最后更新时间等。 QuickAdd：编写 js 代码在 Obsidian 中就可以新建文章。 其他的插件自行搜索查询相关功能。 ","date":"2025-02-10","objectID":"/posts/pougfvs/:3:1","tags":["blog","hugo","fixit"],"title":"博客建站记录","uri":"/posts/pougfvs/"},{"categories":["搞点啥"],"content":"发布 编写完成保存后直接推送到远程 Hugo 源码仓库，仓库接收到更新后自动使用 Github Action 生成网站内容推送到 Github Page 仓库，直接一步到位更新网站。 Github Action 代码：来自 KrislinBlog name: github pages # 名字自取 on: push: branches: - main # 这里的意思是当 main分支发生push的时候，运行下面的jobs，这里先改为github-actions jobs: deploy: # 任务名自取 runs-on: ubuntu-latest # 在什么环境运行任务 steps: - uses: actions/checkout@v2 # 引用actions/checkout这个action，与所在的github仓库同名 with: submodules: true # Fetch Hugo themes (true OR recursive) 获取submodule主题 fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo # 步骤名自取 uses: peaceiris/actions-hugo@v2 # hugo官方提供的action，用于在任务环境中获取hugo with: hugo-version: 'latest' # 获取最新版本的hugo extended: true - name: Build run: hugo --minify # 使用hugo构建静态网页 - name: Deploy uses: peaceiris/actions-gh-pages@v3 # 一个自动发布github pages的action with: # github_token: ${{ secrets.GITHUB_TOKEN }} 该项适用于发布到源码相同repo的情况，不能用于发布到其他repo external_repository: bulone/bulone.github.io # 发布到哪个repo personal_token: ${{ secrets.ACTION_ACCESS_TOKEN }} # 发布到其他repo需要提供上面生成的personal access token publish_dir: ./public # 注意这里指的是要发布哪个文件夹的内容，而不是指发布到目的仓库的什么位置，因为hugo默认生成静态网页到public文件夹，所以这里发布public文件夹里的内容 publish_branch: main # 发布到哪个branch ","date":"2025-02-10","objectID":"/posts/pougfvs/:4:0","tags":["blog","hugo","fixit"],"title":"博客建站记录","uri":"/posts/pougfvs/"}]